// Searches.js
import React, { useState } from 'react';
import { FaPlus } from 'react-icons/fa';
import './Searches.css';

const Searches = () => {
  const [searches, setSearches] = useState([]);
  const [showPopup, setShowPopup] = useState(false);
  const [currentStep, setCurrentStep] = useState(1);
  const [newSearch, setNewSearch] = useState({ location: '', bedrooms: '', price: '' });

  // Load searches from local storage when the component mounts
  React.useEffect(() => {
    const storedSearches = JSON.parse(localStorage.getItem('searches'));
    if (storedSearches) {
      setSearches(storedSearches);
    }
  }, []);

  // Save searches to local storage whenever they change
  React.useEffect(() => {
    localStorage.setItem('searches', JSON.stringify(searches));
  }, [searches]);

  const handleNext = () => {
    if (currentStep < 3) {
      setCurrentStep(currentStep + 1);
    } else {
      handleAddSearch();
    }
  };

  const handleAddSearch = () => {
    setSearches([...searches, newSearch]);
    setNewSearch({ location: '', bedrooms: '', price: '' });
    setCurrentStep(1);
    setShowPopup(false);
  };

  const handleClosePopup = () => {
    setCurrentStep(1);
    setShowPopup(false);
  };

  return (
    <div className="searches-container">
      <header className="searches-header">
        <h2 className="searches-title">Searches</h2>
      </header>

      <div className="searches-list">
        {searches.length === 0 ? (
          <div className="search-item add-tile" onClick={() => setShowPopup(true)}>
            <FaPlus className="large-add-icon" />
          </div>
        ) : (
          <>
            {searches.map((search, index) => (
              <div key={index} className="search-item">
                <p>Location: {search.location}</p>
                <p>Bedrooms: {search.bedrooms}</p>
                <p>Price: {search.price}</p>
              </div>
            ))}
            <div className="search-item add-tile" onClick={() => setShowPopup(true)}>
              <FaPlus className="large-add-icon" />
            </div>
          </>
        )}
      </div>

      {showPopup && (
        <div className="full-screen-popup">
          <div className="popup-content">
            <button className="popup-close" onClick={handleClosePopup}>&times;</button>
            {currentStep === 1 && (
              <>
                <h3>Enter Location</h3>
                <input
                  type="text"
                  placeholder="Location"
                  value={newSearch.location}
                  onChange={(e) => setNewSearch({ ...newSearch, location: e.target.value })}
                />
              </>
            )}
            {currentStep === 2 && (
              <>
                <h3>Enter Number of Bedrooms</h3>
                <input
                  type="text"
                  placeholder="Bedrooms"
                  value={newSearch.bedrooms}
                  onChange={(e) => setNewSearch({ ...newSearch, bedrooms: e.target.value })}
                />
              </>
            )}
            {currentStep === 3 && (
              <>
                <h3>Enter Price Range</h3>
                <input
                  type="text"
                  placeholder="Price"
                  value={newSearch.price}
                  onChange={(e) => setNewSearch({ ...newSearch, price: e.target.value })}
                />
              </>
            )}
            <button className="next-button" onClick={handleNext}>
              {currentStep < 3 ? 'Next' : 'Add Search'}
            </button>
          </div>
        </div>
      )}
    </div>
  );
};

export default Searches;